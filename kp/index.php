<?php
echo '1. d) echo "Переменная $x = 5"; <br>';

echo "<br>2. Динамический сайт — сайт, состоящий из динамичных страниц — шаблонов, контента, скриптов и прочего, в большинстве случаев хранящихся на сервере как отдельные ресурсы (файлы, данные в базах данных и на сторонних серверах). При запросе страницы клиентом (браузером или иным приложением) она может формироваться двумя способами или их комбинацией: а) на стороне сервера из страницы-шаблона и отдельно хранимого содержимого (информации, скриптов и др.). б) в приложении клиента, с подгрузкой ресурсов. <br>";

echo "<br>3. В PHP текст одинарной кавычки рассматривается как строковое значение, а текст двойной кавычки будут как переменные, заменяя и обрабатывая их значение. <br>";

echo "<br>4. Отличие в методе GET от POST в способе передачи данных. Запрос GET передает данные в URL в виде пар имя-значение (через ссылку), а запрос POST передает данные в теле запроса <br>";

echo "<br>5. Атрибут action (HTML тега form) определяет адрес, куда отправляется форма (по умолчанию действие установлено на текущую страницу). элементов button, или input относящиxся к форме. <br>";

function user_count(){
    echo "<br>6. ";
    if (!file_exists("count.txt")){
        $s = fopen("count.txt","w");
    }
    $s = file("count.txt");
    $x = implode("", $s);
    $x++;
    $s = fopen("count.txt","w");
    fputs($s, $x);
    echo "$x<br>";
    fclose($s);
}
user_count();

echo "<br>7. Они наиболее полезны в качестве значений callable-параметров; они также могут быть использованы в качестве значений переменных; PHP автоматически преобразует такие выражения в экземпляры внутреннего класса Closure. АФ могут также наследовать переменные из родительской области видимости.<br>Другими словами анонимные функции более гибкие в применении с сравнении с именованными <br>";

echo "<br>8. ";
$array = [1, 2, 3, 4, 5];
for ($i = 0; $i < count($array); $i++){
    echo "$array[$i] ";
}
echo "<br>";

$str = "<br>9. Одна из очень мощных и полезных возможностей языка PHP – поддержка регулярных выражений. многих программистов, как начинающих, так и довольно опытных, пугает внешняя сложность и запутанность языка регулярных выражений. но могу вас уверить – это того стоит. применение регулярных выражений существенно облегчает работу по обработке текстов и слабо структурированных данных.";
$str_exp = preg_split('~(\.|\!|\?) ~u', $str);
$c = count($str_exp);
for ($i = 0; $i < $c; $i++){
    $fc = mb_strtoupper(mb_substr($str_exp[$i], 0, 1));
    if ($i > 0)
        echo '. '.$fc.mb_substr($str_exp[$i], 1);
    else
        echo $fc.mb_substr($str_exp[$i], 1);
}
echo "<br>";

echo '<br>10. fread(), fgets(), file_get_contents()';
echo "<br>";

echo "<br>11. Разница между cookie и сессиями состоит в том, что cookie полностью хранятся в браузере пользователя (то есть на компьютере клиента), а при сессиях в cookie хранится только идентификатор сессии, а вся информация лежит на сервере в специальном уникальном файле<br>";

echo "<br>12. Для начала идентифицируется браузер, ему выдается уникальный идентификатор и он передается с каждым запросом. Идентификатор - это обычная переменная. По-умолчанию ее имя - PHPSESSID. При старте сессии (при каждом вызове session_start()) клиенту устанавливается cookie. Браузер исправно при каждом следующем запросе эту куку возвращает и PHP имеет идентификатор сессии. Затем в массиве $_SESSION будут находится переменные (данные), которые мы ходим сделать доступными в различных скриптах.<br>";
?>